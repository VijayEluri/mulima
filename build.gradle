apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'codenarc' 
apply plugin: 'jdepend'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'eclipse'
apply from: 'emma.gradle'

group = 'org.ajoberstar'
version = '0.1.2-SNAPSHOT'

applicationName = 'mulima'
mainClassName = 'org.mulima.main.Mulima'

sourceCompatibility = '1.6'

tasks.withType(VerificationTask) {
	if (!(it instanceof Test)) {
		ignoreFailures = true
	}
}

codenarc.configFile = file('config/codenarc/codenarc.groovy')

repositories {
	mavenCentral()
	maven { url = 'http://m2repo.spockframework.org/releases' }
	maven { url = 'http://m2repo.spockframework.org/snapshots' }
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.6.4'
	compile 'org.springframework:spring-context:3.1.0.RELEASE'
	compile 'org.springframework:spring-jdbc:3.1.0.RELEASE'
	compile 'org.springframework:spring-tx:3.1.0.RELEASE'
	compile 'org.apache.commons:commons-compress:1.3'
	compile 'commons-codec:commons-codec:1.6'
	
	runtime 'org.slf4j:jcl-over-slf4j:1.6.4'
	runtime 'ch.qos.logback:logback-classic:1.0.0'
	runtime 'mysql:mysql-connector-java:5.1.18'
	runtime 'commons-cli:commons-cli:1.2'
	
	groovy 'org.codehaus.groovy:groovy-all:1.8.5'
	emma 'emma:emma:2.1.5320'
	emma 'emma:emma_ant:2.1.5320'	
	
	testCompile 'junit:junit:4.10'
	testCompile 'org.mockito:mockito-core:1.9.0'
	testCompile 'org.spockframework:spock-core:0.6-groovy-1.8-SNAPSHOT'
	
	testRuntime 'cglib:cglib-nodep:2.2.2'	
}

jar {
	manifest {
		attributes 'Implementation-Title':'Mulima'
		attributes 'Implementation-Version':version
	}
}

test {
	systemProperties 'log.level':'DEBUG'
}

startScripts {
	doLast {
		
		def lines = windowsScript.readLines().collect {
			if (it ==~ /^set DEFAULT_JVM_OPTS=/) {
				return 'set DEFAULT_JVM_OPTS=-Dmulima.home="%~dp0.." -Dlogback.configurationFile=%~dp0..\\config\\logback.groovy'
			} else {
				return it
			}
		}
		windowsScript.withPrintWriter { writer ->
			lines.each { writer.println it }
		}
	}
}
