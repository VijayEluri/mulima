plugins {
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.7'
  id 'org.ajoberstar.grgit' version '3.0.0'
  id 'org.ajoberstar.reckon' version '0.9.0'
  id 'com.diffplug.gradle.spotless' version '3.18.0'
  id 'org.sonarqube' version '2.7'
}

apply from: 'gradle/locking.gradle'

group = 'org.ajoberstar'

mainClassName = 'org.ajoberstar.mulima/org.ajoberstar.mulima.Main'
sourceCompatibility = 11

reckon {
  scopeFromProp()
  stageFromProp('beta', 'rc', 'final')
}

javafx {
  version = '11.0.1'
  modules = [
    'javafx.controls',
    'javafx.fxml'
  ]
}

repositories { mavenCentral() }

dependencies {
  // logging
  implementation 'org.apache.logging.log4j:log4j-api:latest.release'
  runtimeOnly 'org.apache.logging.log4j:log4j-core:latest.release'
  runtimeOnly 'com.lmax:disruptor:latest.release'

  // spring
  implementation 'org.springframework:spring-context:latest.release'

  // cli
  implementation 'commons-cli:commons-cli:latest.release'

  // util
  implementation 'org.apache.commons:commons-lang3:latest.release'
  implementation 'commons-codec:commons-codec:latest.release'
  implementation 'com.fasterxml.jackson.core:jackson-core:latest.release'
  implementation 'com.fasterxml.jackson.core:jackson-databind:latest.release'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:latest.release'

  testImplementation 'junit:junit:latest.release'
  testImplementation 'org.mockito:mockito-core:latest.release'
  testImplementation 'org.spockframework:spock-core:latest.release'
  testRuntimeOnly 'cglib:cglib:latest.release'
}

spotless {
  java {
    importOrder 'java', 'javax', ''
    removeUnusedImports()
    eclipse().configFile(project.rootProject.file('gradle/eclipse-java-formatter.xml'))
  }
  groovyGradle {
    target '**/*.gradle'
    greclipse().configFile(project.rootProject.file('gradle/eclipse-java-formatter.xml'))
  }
}

jar.version = null
