plugins {
  id 'application'
  id 'org.ajoberstar.grgit' version '3.0.0'
  id 'org.ajoberstar.reckon' version '0.9.0'
  id 'com.diffplug.gradle.spotless' version '3.16.0'
  id 'org.sonarqube' version '2.6.2'
}

apply from: 'gradle/locking.gradle'

group = 'org.ajoberstar'

mainClassName = 'org.mulima.main.Mulima'
sourceCompatibility = 11

reckon {
  scopeFromProp()
  stageFromProp('beta', 'rc', 'final')
}

repositories { mavenCentral() }

dependencies {
  // logging
  implementation 'org.apache.logging.log4j:log4j-api:latest.release'
  runtimeOnly 'org.apache.logging.log4j:log4j-core:latest.release'
  runtimeOnly 'org.apache.logging.log4j:log4j-jcl:latest.release'

  implementation 'org.slf4j:slf4j-api:latest.release'
  runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:latest.release'

  implementation 'org.springframework:spring-context:latest.release'
  implementation 'commons-codec:commons-codec:latest.release'

  implementation 'commons-cli:commons-cli:latest.release'

  testImplementation 'junit:junit:latest.release'
  testImplementation 'org.mockito:mockito-core:latest.release'
  testImplementation 'org.spockframework:spock-core:latest.release'
  testRuntimeOnly 'cglib:cglib:latest.release'
}

spotless {
  java {
    importOrder 'java', 'javax', ''
    removeUnusedImports()
    eclipse().configFile(project.rootProject.file('gradle/eclipse-java-formatter.xml'))
  }
  groovyGradle {
    target '**/*.gradle'
    greclipse().configFile(project.rootProject.file('gradle/eclipse-java-formatter.xml'))
  }
}
